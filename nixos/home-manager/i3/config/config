# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4
set $alt Mod1

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 8

# Why tf is this not the default?
exec_always --no-startup-id autotiling

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

# Configure microphone 
exec --no-startup-id pa-toggle-mic.sh --disable
bindsym XF86AudioPlay exec --no-startup-id pa-toggle-mic.sh --toggle

# exec --no-startup-id "$HOME/.config/polybar/polybar-scripts/toggle-scream.sh"

#exec flatpak run com.github.wwmm.pulseeffects --gapplication-service &> /dev/null

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec --no-startup-id dmenu_run
# A more modern dmenu replacement is rofi:
# bindcode $mod+40 exec "rofi -modi drun,run -show drun"
# There also is i3-dmenu-desktop which only displays applications shipping a
# .desktop file. It is a wrapper around dmenu, so you need that installed.
# bindcode $mod+40 exec --no-startup-id i3-dmenu-desktop

# alt tab
#bindsym $mod+Tab exec /usr/bin/i3-alt-tab.py next all
#refer to the git for more bindings..

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
#bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

#### Set workspace monitors ####
#set $first_monitor "HDMI-0"
#workspace a1 output $first_monitor
#workspace a2 output $first_monitor
#workspace a3 output $first_monitor
#workspace a4 output $first_monitor
#workspace a5 output $first_monitor
#workspace a6 output $first_monitor
#workspace a7 output $first_monitor
#workspace a8 output $first_monitor
#workspace a9 output $first_monitor
#bindsym $mod+0 mode "all workspace monitors"
bindsym $mod+1 mode "workspace monitor 1"
exec i3-msg workspace a1

#mode "all workspace monitors" {
#    bindsym Escape mode "default"
#    bindsym Return mode "default"
#    bindsym s exec "for i in {1..9}; do $i3_resurrect save -w a${i}; $i3_resurrect save -w b${i}; $i3_resurrect save -w c${i}; done"
#    bindsym r exec "for i in {1..9}; do $i3_resurrect restore -w a${i}; $i3_resurrect restore -w b${i}; $i3_resurrect restore -w c${i}; done"
#}

mode "workspace monitor 1" {
    bindsym Escape mode "default"
    bindsym Return mode "default"
    bindsym $mod+space mode "workspace custom"
    bindsym $mod+1 mode "workspace monitor 1"
    bindsym f focus output $first_monitor
    bindsym 1 workspace a1
    bindsym 2 workspace a2
    bindsym 3 workspace a3
    bindsym 4 workspace a4
    bindsym 5 workspace a5
    bindsym 6 workspace a6
    bindsym 7 workspace a7
    bindsym 8 workspace a8
    bindsym 9 workspace a9
    bindsym Shift+1 move container to workspace a1
    bindsym Shift+2 move container to workspace a2
    bindsym Shift+3 move container to workspace a3
    bindsym Shift+4 move container to workspace a4
    bindsym Shift+5 move container to workspace a5
    bindsym Shift+6 move container to workspace a6
    bindsym Shift+7 move container to workspace a7
    bindsym Shift+8 move container to workspace a8
    bindsym Shift+9 move container to workspace a9
    bindsym s mode "workspace save monitor 1"
    bindsym r mode "workspace restore monitor 1"
}

set $i3_resurrect i3-resurrect
mode "workspace save monitor 1" {
    bindsym Escape mode "workspace monitor 1"
    bindsym Return mode "workspace monitor 1"
    bindsym a exec "for i in {1..9}; do $i3_resurrect save -w a${i}; done"
    bindsym 1 exec "$i3_resurrect save -w a1"
    bindsym 2 exec "$i3_resurrect save -w a2"
    bindsym 3 exec "$i3_resurrect save -w a3"
    bindsym 4 exec "$i3_resurrect save -w a4"
    bindsym 5 exec "$i3_resurrect save -w a5"
    bindsym 6 exec "$i3_resurrect save -w a6"
    bindsym 7 exec "$i3_resurrect save -w a7"
    bindsym 8 exec "$i3_resurrect save -w a8"
    bindsym 9 exec "$i3_resurrect save -w a9"
}
mode "workspace restore monitor 1" {
    bindsym Escape mode "workspace monitor 1"
    bindsym Return mode "workspace monitor 1"
    bindsym a exec "for i in {1..9}; do $i3_resurrect restore -w a${i}; done"
    bindsym 1 exec "$i3_resurrect restore -w a1"
    bindsym 2 exec "$i3_resurrect restore -w a2"
    bindsym 3 exec "$i3_resurrect restore -w a3"
    bindsym 4 exec "$i3_resurrect restore -w a4"
    bindsym 5 exec "$i3_resurrect restore -w a5"
    bindsym 6 exec "$i3_resurrect restore -w a6"
    bindsym 7 exec "$i3_resurrect restore -w a7"
    bindsym 8 exec "$i3_resurrect restore -w a8"
    bindsym 9 exec "$i3_resurrect restore -w a9"
}

#### Set command hotkeys ####
  # Program launcher
  #bindsym $mod+Shift+slash exec rofi -no-lazy-grab -show drun -modi drun -theme "$HOME/.config/rofi/launchers/ribbon/ribbon_left_ethorbit"   
  bindsym $mod+Shift+slash exec "$HOME/.local/bin/rofi-rofi.sh" 
#"i3-dmenu-desktop"

#### Scratchpad ####
bindsym --release $alt+h move scratchpad
bindsym --release $alt+Tab scratchpad show

for_window [class="Pulseeffects"] move scratchpad

#### Force floating and stuff here
for_window [class="Pavucontrol|Pulseeffects|Nemo|File-roller"] floating enable 

#### Set default program workspaces ####
  # Terminal
exec --no-startup-id kitty

   # Virt-Manager
#for_window [class="Virt-manager"] move container to workspace $wsvms

  # Video Editing
#for_window [class="kdenlive"] move container to workspace $wsvids

  # Game Development
for_window [class="UnrealEditor"] layout tabbed
for_window [class="Blender"] layout tabbed

#exec_always --no-startup-id  kitty neofetch 

for_window [class="KeePassXC"] floating enable

# Browser
#for_window [class="Chromium-browser" workspace=$wsrt_dev] move container to workspace $wslft_dev layout tabbed
#for_window [title="Chromium"] move container to workspace $wslft_dev layout tabbed
#exec flatpak run com.github.Eloston.UngoogledChromium

#for_window [class="Firefox" workspace=$wsrt_dev] move container to workspace $wslft_dev 
#exec --no-startup-id flatpak run org.mozilla.firefox https://www.youtube.com/
#exec --no-startup-id flatpak run org.mozilla.firefox

  # Steam
#assign [class="Steam|GeForce NOW"] b2
no_focus [class="Steam"]	
for_window [class="Steam" title="Steam"] layout tabbed
for_window [class="GeForce NOW"] layout tabbed

   # Friends Panel
  for_window [class="Steam" title="Friends"] focus, move right, move right, move right, move right, move right, move right, move right, resize set width 20 ppt

   # Server Panel
  for_window [class="Steam" title="Servers|Game Info"] floating enable

  # Garry's Mod
  #for_window [class="hl2_linux"] exec mousejail

   # SteamLink
#for_window [class="SteamLink"] move container to workspace b2

#for_window [class="GeForce NOW"] move container to workspace $wsgames layout tabbed
for_window [class="Terraria.bin.x86_64"] floating enable, exec mousejail

#exec --no-startup-id flatpak run com.valvesoftware.Steam

   # Virtual Machine
#exec --no-startup-id virt-manager

# lock cursor to current window
#bindsym $mod+Shift+l exec "mousejail" 
#mousejail

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

## Start i3bar to display a workspace bar (plus the system information i3status
## finds out, if available)
#bar {
#        status_command i3status
#	
#	colors {
#		background #003800
#		#background #182118
#		# #3cb93c
#	}
#
#	height 22
#}

#dummy bar for polybar
#bar {
#	i3bar_command i3bar -t 
#	workspace_buttons no
#	tray_output none
#	height 28
#	mode dock
#	position top
#
#    	colors { 
#    		background #00000000
#		statusline #00000000
#		separator #00000000
#		focused_workspace #00000000 #00000000 #00000000
#		inactive_workspace #00000000 #00000000 #00000000
#		urgent_workspace #00000000 #00000000 #00000000
#    	}
#}

client.unfocused #000000 #545455 #FFFFFF #545455
client.focused #000000 #4f4f7d #FFFFFF #4f4f7d
#client.focused_inactive #000000 #757575 #FFFFFF #4a4a4a

#exec_always --no-startup-id "$HOME/.config/polybar/launch.sh"

# Remove borders (for i3-gaps)
for_window [class=".*"] border pixel 1
smart_borders on

# Add gaps
gaps inner 8
gaps outer 0
gaps top 28
#border_radius 10

#exec xset -b             
#exec xset s off             

# Screenshot
bindsym --release Print exec flameshot screen -c -p $HOME/Downloads/Screenshots/
bindsym $mod+Print exec flameshot gui  

exec_always --no-startup-id picom #--experimental-backends

# Let these scripts handle everything else (the things that all desktops should do): 
#exec --no-startup-id /bin/bash -c "source $HOME/.desktop-once"
#exec_always --no-startup-id /bin/bash -c "source $HOME/.desktop-always"
